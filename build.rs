#[derive(Debug)]
#[toml_cfg::toml_config]
pub struct Config {
    #[default("")]
    wifi_ssid: &'static str,
    #[default("")]
    wifi_pass: &'static str,
    #[default("")]
    server_address: &'static str,
}

fn main() -> anyhow::Result<()> {
    if !std::path::Path::new("cfg.toml").exists() {
        anyhow::bail!("You need to create a `cfg.toml`! Use `cfg.toml.example` as a template.");
    }

    // The constant `CONFIG` is auto-generated by `toml_config`.
    let app_config = CONFIG;
    println!("{:?}", app_config);
    if app_config.wifi_ssid == "" || app_config.wifi_pass == "" {
        anyhow::bail!("You need to set the Wi-Fi credentials in `cfg.toml`!");
    }
    if app_config.server_address == "" {
        anyhow::bail!("You need to set the Snapcast server address in `cfg.toml`!");
    }

    embuild::espidf::sysenv::output();
    Ok(())
}
